
services:

  # InfluxDB
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    volumes:
      - ./influxdb:/var/lib/influxdb2
      - ./shared_files:/shared_files
    networks:
      greenhouse_network:
        ipv4_address: 192.168.1.100  # Static IP for InfluxDB

  # MQTT Broker (Mosquitto)
  mqtt_broker:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/mosquitto_config:/mosquitto/config
      - ./mosquitto/mosquitto_data:/mosquitto/data
      - ./mosquitto/mosquitto_log:/mosquitto/log
      - ./shared_files:/shared_files
    networks:
      greenhouse_network:
        ipv4_address: 192.168.1.101  # Static IP for MQTT Broker

  # Monitor
  monitor:
    build: ./monitor
    container_name: monitor
    depends_on:
      - influxdb
      - mqtt_broker
      - managed_resources
    environment:
      - INFLUXDB_URL=http://192.168.1.100:8086
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_TOKEN=${INFLUXDB_ADMIN_TOKEN}
      - MQTT_BROKER_HOST=${MQTT_BROKER_HOST}
      - MQTT_BROKER_PORT=${MQTT_BROKER_PORT}
    volumes:
      - ./monitor:/app
      - ./shared_files:/shared_files
    command: python -u /app/monitor.py
    networks:
      greenhouse_network:
        ipv4_address: 192.168.1.102  # Static IP for Monitor

  # analyser
  analyzer:
    build: ./analyzer
    container_name: analyser
    depends_on:
      - mqtt_broker
      - knowledge_service
    environment:
      - MQTT_BROKER_HOST=${MQTT_BROKER_HOST}
      - MQTT_BROKER_PORT=${MQTT_BROKER_PORT}
    volumes:
      - ./analyzer:/app
      - ./shared_files:/shared_files
    command: python -u /app/analyzer.py -f /shared_files/greenhouse_threshold.json
    networks:
      greenhouse_network:
        ipv4_address: 192.168.1.103  # Static IP for Analyser

  #planner
  planner:
    build: ./planner
    container_name: planner
    depends_on:
      - mqtt_broker
      - knowledge_service
      - analyzer
    environment:
      - MQTT_BROKER_HOST=${MQTT_BROKER_HOST}
      - MQTT_BROKER_PORT=${MQTT_BROKER_PORT}
    volumes:
      - ./planner:/app
      - ./shared_files:/shared_files
    command: python -u /app/planner.py
    networks:
      greenhouse_network:
        ipv4_address: 192.168.1.104 # static ip address for planner.
     

  # Executor
  executor:
    build: ./executor
    container_name: executor
    depends_on:
      - influxdb
      - mqtt_broker
      - managed_resources
    environment:
      - MQTT_BROKER_HOST=${MQTT_BROKER_HOST}
      - MQTT_BROKER_PORT=${MQTT_BROKER_PORT}
    volumes:
      - ./executor:/app
      - ./shared_files:/shared_files
    command: python -u /app/executor.py
    networks:
      greenhouse_network:
        ipv4_address: 192.168.1.105  # Static IP for Executor

  # Knowledge Service
  knowledge_service:
    build: ./Knowledge
    container_name: knowledge_manager
    environment:
      - INFLUXDB_URL=http://192.168.1.100:8086  # Fixed the extra space
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_TOKEN=${INFLUXDB_ADMIN_TOKEN}
      - MQTT_BROKER_HOST=${MQTT_BROKER_HOST}
      - MQTT_BROKER_PORT=${MQTT_BROKER_PORT}
    volumes:
      - ./shared_config:/shared_config
      - ./shared_files:/shared_files
    networks:
      greenhouse_network:
        ipv4_address: 192.168.1.106  # Static IP for Knowledge Service
    restart: always

  # Managed Resources
  managed_resources:
    build: ./managed_resources
    container_name: managed_resources
    depends_on:
      - mqtt_broker
    environment:
      - MQTT_BROKER_HOST=${MQTT_BROKER_HOST}
      - MQTT_BROKER_PORT=${MQTT_BROKER_PORT}
    volumes:
      - ./managed_resources:/app
      - ./shared_files:/shared_files
    command: python -u /app/resources_simulation.py
    networks:
      greenhouse_network:
        ipv4_address: 192.168.1.107  # Static IP for Managed Resources
  # Grafana (Newly Added)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"  # Access Grafana at http://localhost:3000
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}  # Change this password for security
      - GF_USERS_ALLOW_SIGN_UP=false  # Disable user signups
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning  # Ensure provisioning
    depends_on:
      - influxdb
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards  # Mount dashboard files
      - ./grafana/provisioning:/etc/grafana/provisioning  # Mount provisioning
      - ./shared_files:/shared_files
    networks:
      greenhouse_network:
        ipv4_address: 192.168.1.108  # Static IP for Grafana
    restart: always

volumes:
  influxdb:
  mosquitto_config:
  mosquitto_data:
  mosquitto_log:
  grafana_data:

networks:
  greenhouse_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24  # Custom subnet for static IPs
